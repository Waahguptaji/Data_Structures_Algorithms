/*
Print all subsequences of a string.
Given a string, we have to find out all its subsequences of it.A String is a subsequence of a given String,
that is generated by deleting some character of a given string without changing its order.
Input : abc
Output : a, b, c, ab, bc, ac, abc
*/
package Recursion2;

//here we are using Bottom Approach --> in this we are soving the small task and rest is trusting on the recursion
public class ReturnSubsequences {
    public static String[] findSubsequences(String str){
        //Base Case
        if ( str.length() == 0) {
            String ans[] = {""};
            return ans;
        }
        //here we are solving it for small yz
        String smallAns[] = findSubsequences(str.substring(1));
        //here we are creating the ans string to contain subsequence by the smallAns elements and appending with smallAns.
        String ans[] = new String[2 * smallAns.length];

        //now we are copying the smallAns element to the ans to get the subsequence element.
//        int k = 0;
        for (int i = 0; i <smallAns.length; i++) {
          ans[i] = smallAns[i];
//            ans[k] = smallAns[i];
//            k++;
        }
        //now we are copying the further smallAns element to the ans by appending the first element of the string.
        for (int i = 0; i <smallAns.length; i++) {
          ans[i + smallAns.length] = str.charAt(0) + smallAns[i];
//            ans[k] = str.charAt(0) + smallAns[i];
//            k++;
        }
        return ans;
    }

    public static void main(String[] args) {
        String str = "xyz";
        String ans[] = findSubsequences(str);
        for (int i = 0; i < ans.length; i++) {
            System.out.println(ans[i]);
        }

    }
}
